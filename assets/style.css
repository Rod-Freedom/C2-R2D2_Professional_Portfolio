/* The banner font is used in the hero banner and the main title. The main font in all the content titles and short sentences. The info font for the disclaimer and the more readable content. */
:root {
    --bannerFont: "Geostar Fill", serif;
    --mainFont: "Roboto Condensed", sans-serif;
    --infoFont: "Roboto Mono", monospace;
    --link-color: rgb(189, 189, 189);
    --SW-gray: rgb(189, 189, 189, 60%);
    --border-gray: solid var(--SW-gray) 1px;
    --content-color: rgb(206, 206, 206);
}

/* Some default values for quicker styling. */
* {
    margin: 0;
    padding: 0;
    text-decoration: none;
    list-style: none;
}

/* The body contains a background that adjusts to any screen size. The flex property helps to keep the footer at the bottom no matter the screen size, while maintaining the main element centered. */
body {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    height: 100vh;
    width: 100%;
    background: url(./images/stars-BG.jpg) no-repeat center center fixed;
}

/* This selector includes the top disclaimer and the main header. */
.full-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    background: none;
    width: 100%;
    text-align: center;
}

.disclaimer {
    font-family: var(--infoFont);
    font-weight: 100;
    font-size: .9rem;
    color: white;
    margin: 1vh 0;
}

/* These two selectors are for the link to the repo inside the disclaimer. */
.repo a {
    color: white;
    font-weight: 400;
}

.repo:hover {
    text-decoration: underline;
}

/* The header background doesn't include the disclaimer, to give the site a more appealing look. The grid property keeps the the main title centered, while the nav links are kept at the right.  */
.top-header {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    justify-items: center;
    gap: 2vw;
    padding: 1vh 0 2vh;
    width: 100%;
    background-color: black;
    border-bottom: var(--border-gray);
}

.main-title {
    display: flex;
    flex-direction: column;
    align-items: center;
    grid-column: 2 / 3;
    font-family: var(--bannerFont);
}

.main-title h1 {
    font-size: 5rem;
}

.main-title h2 {
    margin-top: -.5%;
    font-size: 1.5rem;
    color: var(--link-color);
}

.top-menu {
    grid-column: 3 / -1;
    display: flex;
    justify-content: center;
    width: 100%;
    font-family: var(--mainFont);
}

.top-menu ul {
    display: flex;
    justify-content: space-around;
    align-items: center;
    width: 100%;
}

/* Some properties for a neat animation on the links at the top menu. Next a hover response. */
.top-menu a {
    color: var(--link-color);
    font-size: 1.3rem;
    background-image: linear-gradient(#000 0 0);
    background-size: 0% .4vh;
    transition: all .2s;
    background-position: center bottom;
    background-repeat: no-repeat;
    padding: .3rem 0;
}

.top-menu a:hover {
    background-image: linear-gradient(white 0 0);
    background-size: 90% .2vh;
    color: white;
}

/* The main element has a max width that keeps the design as intended for large screens. */
main {
    display: flex;
    flex-direction: column;
    align-items: center;
    max-width: 2050px;
}

/* The banner has a relative position to contain the quote in absolute position. the cover size keeps the banner responsive to any screen size.  */
.hero-banner {
    background-image: url(./images/R2-D2_Hero.png);
    background-size: cover;
    background-position: center 18%;
    height: 50vh;
    width: 90%;
    margin: 4vh 0 6vh;
    border: var(--border-gray);
    position: relative;
}

/* The quote element has a grid display to give the sentences a specific position responsive to the screen size. */
.quote {
    position: absolute;
    bottom: -5%;
    right: 5%;
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: 1fr 1fr;
    font-family: var(--bannerFont);
    border: var(--border-gray);
    width: 1100px;
    background-color: rgb(0, 0, 0, 80%);
    padding: 1vh 2vw;
    text-align: center;
}

.quote h2 {
    font-family: var(--mainFont);
    font-weight: 200;
    grid-row: 1 / 2;
    grid-column: 1 / 3;
}

.quote p {
    font-size: 2rem;
    grid-row: 2 / -1;
    grid-column: 2 / -1;
}

/* This selector keeps the main content in a column. The width maintains some space between the border of the screen and the content to show the stary background. It's kept centered on the screen by the flex property of the main element. */
.articles {
    display: flex;
    flex-direction: column;
    width: 90%;
    background-color: rgb(33, 33, 33);
    color: var(--content-color);
    margin-bottom: 8vh;
}

/* The article class gives a grid display for the titles and the content to distribute o on a 1:5 ratio. The titles are kept at the left, and the content to the right. */
article {
    padding: 4vh 2vw;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 2vw;
    align-items: center;
}

article h2 {
    font-family: var(--mainFont);
    font-size: 3rem;
    text-align: right;
    padding-right: 1vw;
    grid-column: 1 / 2;
    height: 100%;
}

/* Each article has a particular color to be intuitively segmented. */
.myJourney h2 {
    border-right: solid .3vw rgb(255, 41, 41);
}

.content {
    grid-column: 2 / -1;
    font-family: var(--infoFont);
}

/* The abilities are organized with different sizes and positions for a more organic look. The grid display has two main columns and 5 rows. */
.abilities {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: repeat(5, 1fr);
    gap: 2vw;
}

/* Each ability has a general class ".ability" for style and a particular class for position in the grid. */
.ability {
    border-radius: 3vh;
    position: relative;
    background-size: cover;
    background-position: center;
}

/* Each article has a particular color to be intuitively segmented. */
.myAbilities h2 {
    border-right: solid .3vw rgb(41, 102, 255);
}

.ability h3 {
    background-color: var(--link-color);
    color: black;
    font-size: 2rem;
    font-family: var(--mainFont);
    padding: 1vh 2vw;
    position: absolute;
    right: 0%;
    bottom: 4vh;
    z-index: 2;
}

/* The filter changes opacity on hover to give the links an intuitive click-on-me usage. The filter covers the entire image with an absolute position. */
.filter {
    border-radius: 3vh;
    opacity: 0;
    position: absolute;
    background-color: var(--link-color);
    height: 100%;
    width: 100%;
    z-index: 1;
}

.filter:hover {
    opacity: 30%;
    transition: 300ms;
}

/* A specific position and size inside the grid along with a particular image for each ability. */
.hacking {
    grid-column: 1 / 2;
    grid-row: 1 / 3;
    background-image: url(./images/R2-D2_Hacking_2.webp);
    min-height: 60vh;
}

.infiltration {
    grid-column: 2 / -1;
    grid-row: 1 / 2;
    background-image: url(./images/R2-D2_Infiltration.png);
}

.combat {
    grid-column: 2 / -1;
    grid-row: 2 / 3;
    background-image: url(./images/R2-D2_Combat.jpeg);
}

.pilot {
    grid-column: 1 / -1;
    grid-row: 3 / 4;
    background-image: url(./images/R2-D2_Pilot.png);
}

.fixer {
    grid-column: 1 / -1;
    grid-row: 4 / -1;
    background-image: url(./images/R2-D2_Handyman.jpeg);
}

/* Each article has a particular color to be intuitively segmented. */
.findMe h2 {
    border-right: solid .3vw rgb(41, 255, 77);
}

.contact li {
    margin: 1vh 2vw;
}

/* Some properties for a neat animation on the links inside the Find Me section. Next a hover response. */
.contact a {
    color: var(--link-color);
    font-size: 1.3rem;
    background-image: linear-gradient(#000 0 0);
    background-size: 0% .4vh;
    transition: all .2s;
    background-position: center bottom;
    background-repeat: no-repeat;
}

.contact a:hover {
    background-image: linear-gradient(white 0 0);
    background-size: 90% .2vh;
    color: white;
}

/* The links wrap when changing screen size. */
.contact {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-wrap: wrap;
    width: 100%;
}

footer {
    display: flex;
    justify-content: center;
    background-color: black;
    padding: 3vh 0;
    font-family: var(--infoFont);
    font-size: 1.2rem;
    color: var(--link-color);
    border-top: var(--border-gray);
    box-sizing: border-box;
    width: 100%;
}

footer a {
    color: var(--link-color);
    font-weight: 700;
}

footer a:hover {
    color: white;
}

/* An mquery for the quote section to enhance its responsiveness and prevent the grid rows from changing height. */
@media (max-width: 2025px) {
    .quote {
        width: 70%;
        right: 3%;
    }

    article h2 {
        font-size: 2.5rem;
    }
}

/* The top header changes from grid to flex columns when there's no more comfortable space for the links to be to the right side.  */
@media (max-width: 1450px) {
    .top-header {
        display: flex;
        flex-direction: column;
    }

    .top-header ul {
        width: 50%;
    }

    /* More responsiveness for the quote. */
    .quote h2 {
        font-size: 1.2rem;
    }

    .quote p {
        font-size: 1.5rem;
    }
}

/* The top menu changes its width for the links to look more organized. */
@media (max-width: 1100px) {
    .top-header ul {
        width: 70%;
    }

    .quote {
        transform: scale(.8);
        right: -6%;
        bottom: 1%;
        width: fit-content;
        display: flex;
        flex-direction: column;
        align-items: start;
    }
    
    .quote p {
        margin-left: 10vw;
    }

    article h2 {
        font-size: 2rem;
    }

    /* All the abilities change their display to a single column. */
    .hacking, .infiltration, .combat, .pilot, .fixer {
        grid-column: 1 / -1;
    }

    /* To set the row heights in the grid. Also, because the hacking ability has the tallest image, it had to be adjusted to the new display. */
    .hacking {
        grid-row: 1 / 2;
        min-height: 30vh;
        background-position: center 15%;
    }

    /* One row for each ability. */
    .infiltration {
        grid-row: 2 / 3;
    }

    .combat {
        grid-row: 3 / 4;
    }

    .pilot {
        grid-row: 4 / 5;
    }

    .fixer {
        grid-row: 5 / -1;
    }

    .contact a {
        font-size: 1rem;
    }

    footer {
        font-size: 1rem;
    }
}

/* There's a major change in the design with this mquery. */
@media (max-width: 760px) {
    .main-title h1 {
        font-size: 4rem;
    }

    .main-title h2 {
        font-size: 1.3rem;
        margin-bottom: 2vh;
    }
    
    .disclaimer {
        font-size: .7rem;
    }

    .top-header ul {
        width: 100%;
    }

    .top-menu a {
        font-size: 1rem;
    }
    
    /* Both the hero banner and articles sections change to a 100% width to look more appealing and less complex on smaller devices. */
    .hero-banner {
        width: 100%;
        margin: 4vh 0;
        border-left: none;
        border-right: none;
    }
    
    .articles {
        width: 100%;
    }
    
    /* Each article changes the display from grid to flex to reduce the complexity of the design so that the titles now display on top of each article instead of being to the left. */
    article {
        display: flex;
        flex-direction: column;
        align-items: start;
        padding: 3vh 4vw;
    }

    /* To make the content more readable. */
    .content p {
        font-weight: 300;
    }

    /* Because the titles are now on top, the right border is no longer needed to separate between the content and the titles. */
    .myJourney h2 {
        border: none;
    }

    .myAbilities h2 {
        border: none;
    }

    .findMe h2 {
        border: none;
    }

    /* The abilities grid now uses the full width of the device. */
    .abilities {
        width: 100%;
        gap: 3vh;
    }
}

@media (max-width: 600px) {
    /* Reducing the font size to occupy less space, and reducing the font weight to make the content more readable.  */
    .content p {
        font-size: .8rem;
        font-weight: 200;
    }

    /* The contact links now use full width and are organized as columns instead of flex-wrap. */
    .findMe .content {
        width: 100%;
    }
    
    .contact {
        flex-direction: column;
        align-items: center;
    }
}

/* Some minor adjustments to the sizes for the smaller screens. */
@media (max-width: 500px) {
    .disclaimer {
        margin: 1vh 10vw;
    }
    
    .main-title h1 {
        font-size: 3rem;
    }

    .main-title h2 {
        font-size: 1rem;
    }
    
    .ability h3 {
        font-size: 1.5rem;
    }
    
    footer {
        font-size: .8rem;
    }
}